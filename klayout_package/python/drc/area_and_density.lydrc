<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Area and Density</description>
 <version/>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>drc_scripts</group-name>
 <menu-path>tools_menu.drc.end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text>
# This code is part of KQCircuits
# Copyright (C) 2021 IQM Finland Oy
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program. If not, see
# https://www.gnu.org/licenses/gpl-3.0.html.
#
# The software distribution should follow IQM trademark policy for open-source software
# (meetiqm.com/iqm-open-source-trademark-policy). IQM welcomes contributions to the code.
# Please see our contribution agreements for individuals (meetiqm.com/iqm-individual-contributor-license-agreement)
# and organizations (meetiqm.com/iqm-organization-contributor-license-agreement).

# Calculate area and density for everything in view
#
# Usage:
# 1. Have everything in view
# 2. Run the macro

require 'etc'

# use tiling to improve performance on multi-core processors
tiles(2.0.mm)
threads(Etc.nprocessors)  # use all cores

# function to compute density
def layer_density(layer)
    layer.area / layer.bbox.area
end

# loop through all layers and return density info
def layers_density(layers)
  info = []
  layers.each do |l|
    layer = input(l)
    info.append("#{l.name} - area: #{layer.area}, bbox: #{layer.bbox.area}, density: #{layer_density(layer)*100}%")
  end
  return info
end

puts layers_density(layers)

# uncomment to write info to file
#output = "C:\\Path\\To\\a\\Folder\\density.txt"
#File.open(output, "w+") do |f|
#  f.puts(layers_density(layers))
#end
</text>
</klayout-macro>
