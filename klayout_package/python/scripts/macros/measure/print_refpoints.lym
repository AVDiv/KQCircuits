<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Print refpoints of selected cell</description>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>
# This code is part of KQCircuits
# Copyright (C) 2022 IQM Finland Oy
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program. If not, see
# https://www.gnu.org/licenses/gpl-3.0.html.
#
# The software distribution should follow IQM trademark policy for open-source software
# (meetiqm.com/developers/osstmpolicy). IQM welcomes contributions to the code. Please see our contribution agreements
# for individuals (meetiqm.com/developers/clas/individual) and organizations (meetiqm.com/developers/clas/organization).


### Usage
# Select cells and object in the GUI by clicking, dragging into a box and possible holding down shift for multiselect.
# Then run this macro and check the console in the macro development window for the output of this macro.
#
# Note, that useful terminology is defined in https://www.klayout.de/doc-qt5/manual/lvs_overview.html


from kqcircuits.pya_resolver import pya
from kqcircuits.klayout_view import KLayoutView
from kqcircuits.defaults import default_layers
from kqcircuits.util.refpoints import Refpoints

# Macro argument
# GLOBAL displays coordinates relative to layout
# LOCAL displays coordinates relative to the selected cell
COORDINATE_ARG = "GLOBAL"

view = KLayoutView(current=True)
layout = view.layout

print("Refpoints of selected cell(s)")
print("")
no_selection = True
for obj in view.layout_view.object_selection:
    no_selection = False
    # workaround for getting the cell due to KLayout bug, see
    # https://www.klayout.de/forum/discussion/1191/cell-shapes-cannot-call-non-const-method-on-a-const-reference
    # TODO: replace by `cell = obj.inst().cell` once KLayout bug is fixed
    cell = obj.layout().cell(obj.cell_index())
    transformation = pya.DTrans()
    if COORDINATE_ARG == "GLOBAL":
        for i in obj.each_inst():
            transformation = transformation * i.inst().dtrans
    refpoints = Refpoints(layout.layer(default_layers["refpoints"]), cell, transformation, None).dict()
    longest_refpoint_name = max([len(name) for name in refpoints.keys()])
    print(cell.basic_name())
    separator = '=' * (longest_refpoint_name + 20)
    print(separator)
    for refpoint, position in refpoints.items():
        whitespace = ' ' * (longest_refpoint_name + 4 - len(refpoint))
        print(f'{refpoint}{whitespace}{str(position)}')
    print("")
if no_selection:
    print("No selected cells detected")
    print("")</text>
</klayout-macro>
