<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>
# Copyright (c) 2019-2020 IQM Finland Oy.
#
# All rights reserved. Confidential and proprietary.
#
# Distribution or reproduction of any information contained herein is prohibited without IQM Finland Oyâ€™s prior
# written permission.

### Usage
# Select cells and object in the GUI by clicking, dragging into a box and possible holding down shift for multiselect.
# Then run this macro and check the console in the macro development window for the output of this macro.
# Note, that you cannot select individual cells in a PCell - you need to turn the top PCell to a static cell before.

import pya

from kqcircuits.defaults import default_layers
from kqcircuits.klayout_view import KLayoutView
from kqcircuits.util.geometry_helper import get_object_path_length

cell_view = KLayoutView.get_active_cell_view()
layout_view = cell_view.view()
layout = cell_view.layout()

for obj in layout_view.object_selection:


    if obj.is_cell_inst():
        # workaround for getting the cell due to KLayout bug, see
        # https://www.klayout.de/forum/discussion/1191/cell-shapes-cannot-call-non-const-method-on-a-const-reference
        # TODO: replace by `cell = obj.inst().cell` once KLayout bug is fixed
        print("name", obj.inst().cell.name, "id", obj.inst().cell_index)
    else:
        print("Not a cell")</text>
</klayout-macro>
