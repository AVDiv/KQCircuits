<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>QCD Standardd chip</description>
 <version>0.1</version>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path>
edit_menu.my_group&gt;end("KQCircuit").end</menu-path>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>import pya

app = pya.Application.instance()
mw=app.main_window()
layout_view = mw.current_view()
#mw.create_view()
#cw = mw.create_layout(2)
#layout = cw.layout()
#print("Test", type(layout))

cell_view = pya.CellView.active()
layout = cell_view.layout()

cell = layout.create_cell("Mask") # A new cell into the layout
cell_view.cell_name=cell.name     # Shows the new cell

# Wipe out old layers
#for layer in layout.layer_indexes():
#  layout.delete_layer(layer) 
# Add default layers
l1 = layout.layer(pya.LayerInfo(1,0,"Optical lit. 1"))
l2 = layout.layer(pya.LayerInfo(2,0,"Grid avoidance"))
l3 = layout.layer(pya.LayerInfo(3,0,"Electron beam lit. 1"))
l4 = layout.layer(pya.LayerInfo(4,0,"New guidelines"))
layout_view.add_missing_layers()

# Draw test structures on all layers
cell.shapes(l1).insert(pya.DBox(0, 0, 100, 200))
cell.shapes(l2).insert(pya.DBox(0, 0, 200, 100))
cell.shapes(l3).insert(pya.DBox(0, 0, -100, -200))

guideline = pya.DPath([pya.DPoint(0,0),pya.DPoint(100,-500)],5)
cell.shapes(l4).insert(guideline)

# Test drawing using libraries


lib_basic = pya.Library.library_by_name("Basic")
lib_kqc = pya.Library.library_by_name("Basic")
pcell_text = lib_basic.layout().pcell_declaration("TEXT")


c1 = layout.create_cell("TEXT", "Basic", {
  "layer": layout.get_info(l2), 
  "text": "Test 44",
  "mag": 100.0
})

cell.insert(pya.DCellInstArray(c1.cell_index(), pya.DTrans(pya.DVector(0, 0))))


c1 = layout.create_cell("Transmissionline", "KQCircuit", {
  "path": guideline
})

cell.insert(pya.DCellInstArray(c1.cell_index(), pya.DTrans(pya.DVector(0, 0))))</text>
</klayout-macro>
