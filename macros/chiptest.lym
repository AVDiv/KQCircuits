<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Testing all elements of KQCircuit</description>
 <version>0.1</version>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path>
edit_menu.my_group&gt;end("KQCircuit").end</menu-path>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>import pya
from kqcircuit.defaults import default_layers

# Create the layout
app = pya.Application.instance()
mw = app.main_window()
layout_view = mw.current_view()

# Do we have a view?
if layout_view == None:
  # Create a new view
  cell_view = mw.create_layout(1)
  layout = cell_view.layout()
  layout_view = mw.current_view()
else:
  # Use an active view
  cell_view = pya.CellView.active()
  layout = cell_view.layout()



# Top cell
cell = layout.create_cell("Chip T99") # A new cell into the layout
cell_view.cell_name=cell.name     # Shows the new cell

# Populate layers
def standard_layers():
  global default_layers
  global layout
  global l
  global layout_view
  l = {}
  for name, layer in default_layers.items():
    print(name,type(layer))
    l[name] = layout.layer(layer)    
    
  layout_view.add_missing_layers()

    
standard_layers()

c1 = layout.create_cell("Chip", "KQCircuit", {})
print(c1)
cell.insert(pya.DCellInstArray(c1.cell_index(), pya.DTrans(pya.DVector(0, 0))))
c1 = layout.create_cell("TEXT", "Basic", {
  "layer": l["Optical lit. 1"], 
  "text": "Test 44",
  "mag": 100.0
})
print(c1)
cell.insert(pya.DCellInstArray(c1.cell_index(), pya.DTrans(pya.DVector(0, 0))))


</text>
</klayout-macro>
